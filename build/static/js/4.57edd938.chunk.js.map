{"version":3,"sources":["shared/hooks/useForm.js","shared/components/Button/Button.js","redux/calendar/summaries/summaries-selectors.js","client/SideBar/SideBarRation/SideBarRation.jsx","client/SideBar/sideBarSummary/SideBarSummary.jsx","client/SideBar/SideBar.jsx","shared/components/RadioField/RadioField.module.scss","shared/components/RadioGroup/RadioGroup.module.scss","client/SideBar/SideBarRation/SideBarRation.module.scss","client/SideBar/sideBarSummary/SideBarSummary.module.scss","client/SideBar/SideBar.module.scss","shared/containerPage/AuthorizedPage/AuthorizedPage.module.scss","shared/hooks/useUniqueString.js","shared/components/RadioField/RadioField.jsx","shared/components/RadioGroup/RadioGroup.jsx","shared/containerPage/AuthorizedPage/AuthorizedPage.jsx","pages/CalculatorPage/CalculatorPage.module.scss","pages/CalculatorPage/initialState.js","pages/CalculatorPage/CalculatorPage.jsx","../node_modules/nanoid/index.browser.js","shared/components/TextField/TextField.module.scss","shared/components/TextField/TextField.jsx","shared/components/Button/Button.module.scss"],"names":["useForm","initialState","onSubmit","useState","data","setData","target","type","name","value","newValue","dataset","radio","prevState","e","preventDefault","types","primary","styles","buttonPrimary","secondary","buttonSecondary","Button","className","text","onClick","variant","selectedClassName","button","defaultProps","getUserId","state","calendar","id","SideBarRation","rationWrapper","rationTitle","ration","summary","SideBarSummary","summaryDiv","summaryTitle","summaryList","summaryItem","summary_kcal","SideBar","module","exports","useUniqueString","useRef","nanoid","current","RadioField","onChange","label","required","dataRadio","radioBox","data-radio","radioButton","visuallyHidden","htmlFor","radioLabel","customRadio","RadioGroup","elements","items","map","item","radioGroup","radioButtons","AuthorizedPageContainer","children","main","mainDiv","sideBarDiv","weight","height","age","desiredWeight","bloodType","CalculatorPage","handleChange","handleSubmit","dispatch","useDispatch","idUser","useSelector","itemsOptions","onFormSubmit","a","aaa","Object","entries","bbb","key","Number","fromEntries","ccc","postDailyRate","reset","AuthorizedPage","title","form","fields","field","TextField","placeholder","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","formGroup","formInput"],"mappings":"8IAoBeA,IAlBC,SAACC,EAAcC,GAAc,IAAD,EAClBC,mBAASF,GADS,mBACnCG,EADmC,KAC7BC,EAD6B,KAe1C,MAAO,CAACD,EAZa,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OACdC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACdC,EAAoB,UAATH,EAAmBD,EAAOK,QAAQC,MAAQH,EAC3DJ,GAAQ,SAACQ,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCL,EAAOE,QAG7B,SAACI,GACpBA,EAAEC,iBACFb,EAASE,GACTC,EAAQ,eAAKJ,Q,+FCZXe,EAAQ,CACZC,QAASC,IAAOC,cAChBC,UAAWF,IAAOG,iBAEdC,EAAS,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,QAASnB,EAAW,EAAXA,KAC7CoB,EAAoBX,EAAMU,GAChC,OACE,wBACEnB,KAAMA,EACNkB,QAASA,EACTF,UAAS,UAAKL,IAAOU,OAAZ,YAAsBD,EAAtB,YAA2CJ,GAHtD,SAKGC,KAIQF,IACfA,EAAOO,aAAe,CACpBH,QAAS,UACTH,UAAW,GACXhB,KAAM,SACNkB,QAAS,e,iCCvBX,kCAAO,IAOMK,EAAY,SAACC,GAAD,OAAUA,EAAMC,SAASC,K,2ECyBnCC,EAdO,WAKpB,OACE,sBAAKX,UAAWL,IAAOiB,cAAvB,UACE,oBAAIZ,UAAWL,IAAOkB,YAAtB,yJACA,mBAAGb,UAAWL,IAAOmB,OAArB,SAPY,wB,kBCfZC,EACE,aADFA,EAEM,EAFNA,EAGU,EAHVA,EAIO,EAJPA,EAKiB,EA2CRC,EAtCQ,WAGrB,OACE,mCACI,sBAAKhB,UAAWL,IAAOsB,WAAvB,UACE,qBAAIjB,UAAWL,IAAOuB,aAAtB,+DAA+CH,KAC/C,qBAAIf,UAAWL,IAAOwB,YAAtB,UACE,qBAAInB,UAAWL,IAAOyB,YAAtB,6DACW,IACT,uBAAMpB,UAAWL,IAAO0B,aAAxB,UACGN,EADH,kCAIF,qBAAIf,UAAWL,IAAOyB,YAAtB,+EACc,IACZ,uBAAMpB,UAAWL,IAAO0B,aAAxB,UACGN,EADH,kCAIF,qBAAIf,UAAWL,IAAOyB,YAAtB,sFACgB,IACd,uBAAMpB,UAAWL,IAAO0B,aAAxB,UACGN,EADH,kCAIF,qBAAIf,UAAWL,IAAOyB,YAAtB,2DACc,IACZ,uBAAMpB,UAAWL,IAAO0B,aAAxB,UACGN,EADH,2C,kBC5BCO,IATf,WACE,OACE,sBAAKtB,UAAWL,IAAO2B,QAAvB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,S,oBCRNC,EAAOC,QAAU,CAAC,UAAY,8BAA8B,eAAiB,mCAAmC,SAAW,6BAA6B,WAAa,+BAA+B,YAAc,gCAAgC,YAAc,kC,oBCAhQD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,eAAiB,mCAAmC,WAAa,+BAA+B,aAAe,iCAAiC,MAAQ,4B,oBCApND,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,oBCAjID,EAAOC,QAAU,CAAC,WAAa,mCAAmC,aAAe,qCAAqC,YAAc,oCAAoC,YAAc,oCAAoC,aAAe,uC,oBCAzOD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,eAAiB,uCAAuC,KAAO,6BAA6B,QAAU,gCAAgC,WAAa,qC,8FCOpMC,EALS,WAEtB,OADkBC,iBAAOC,eACRC,S,yBCAbC,EAAa,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,MAAO9C,EAAgC,EAAhCA,KAAM+C,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC/CvB,EAAKe,IACX,OACE,sBAAKzB,UAAWL,IAAOuC,SAAvB,UACE,uBACEjD,KAAMA,EACNyB,GAAIA,EACJ1B,KAAK,QACLmD,aAAYF,EACZH,SAAUA,EACVE,SAAUA,GAAYA,EACtBhC,UAAS,UAAKL,IAAOyC,YAAZ,YAA2BzC,IAAO0C,kBAE7C,wBAAOC,QAAS5B,EAAIV,UAAWL,IAAO4C,WAAtC,UACE,sBAAMvC,UAAWL,IAAO6C,cACvBT,GAASA,SAKlBF,EAAWvB,aAAe,CACxBwB,SAAU,aACVE,UAAU,GAQGH,Q,kBC9BTY,EAAa,SAAC,GAAsB,IAApBV,EAAmB,EAAnBA,MACdW,EADiC,EAAZC,MACJC,KAAI,SAACC,GAAD,OACzB,cAAC,EAAD,eAAiCA,GAAhBA,EAAKd,UAGxB,OACE,sBAAK/B,UAAWL,IAAOmD,WAAvB,UACGf,GAAS,uBAAO/B,UAAWL,IAAOoC,MAAzB,SAAiCA,IAC3C,qBAAK/B,UAAWL,IAAOoD,aAAvB,SAAsCL,QAI5CD,EAAWnC,aAAe,CACxBqC,MAAO,IAMMF,S,uECXAO,IAViB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjC,OACE,uBAAMjD,UAAS,UAAKL,IAAOuD,KAAZ,cAAf,UACE,qBAAKlD,UAAWL,IAAOwD,QAAvB,SAAiCF,IACjC,qBAAKjD,UAAWL,IAAOyD,WAAvB,SACE,cAAC,IAAD,W,oBCPR7B,EAAOC,QAAU,CAAC,UAAY,kCAAkC,eAAiB,uCAAuC,MAAQ,8BAA8B,KAAO,6BAA6B,KAAO,6BAA6B,OAAS,+BAA+B,MAAQ,8BAA8B,OAAS,iC,gICDhT9C,EAAe,CAC1B2E,OAAQ,GACRC,OAAQ,GACRC,IAAK,GACLC,cAAe,GACfC,UAAW,M,yCCkHEC,UA5GQ,WAAO,IAAD,EACgBjF,YAAQC,GAAc,eADtC,mBACpBG,EADoB,KACd8E,EADc,KACAC,EADA,KAIrBC,EAAWC,cACXC,EAASC,YAAYzD,KAIrBtB,EAAO,YACPgF,EAAe,CACnB,CACEnC,SAAU6B,EACV1E,OACA8C,MAAO,IACPE,UAAW,EACXD,UAAU,GAEZ,CACEF,SAAU6B,EACV1E,OACAgD,UAAW,EACXF,MAAO,KAET,CACED,SAAU6B,EACV1E,OACAgD,UAAW,EACXF,MAAO,KAET,CACED,SAAU6B,EACV1E,OACAgD,UAAW,EACXF,MAAO,MAILmC,EAAY,uCAAG,WAAO3E,GAAP,mBAAA4E,EAAA,6DACnB5E,EAAEC,iBAEI4E,EAAMC,OAAOC,QAAQzF,GACrB0F,EAAMH,EAAIxB,KAAI,mCAAE4B,EAAF,KAAOtF,EAAP,WAAkB,CAACsF,EAAKC,OAAOvF,OAJhC,SAKDmF,OAAOK,YAAYH,GALlB,OAKbI,EALa,OAOnBd,EAASe,YAAc,CAACD,MAAIZ,YAC5BxE,EAAER,OAAO8F,QACTjB,EAAarE,GATM,2CAAH,sDAYlB,OACI,cAACuF,EAAA,EAAD,UACA,sBAAK9E,UAAU,YAAf,UACE,oBAAIA,UAAWL,IAAOoF,MAAtB,4RAGA,uBAAMpG,SAAUuF,EAAclE,UAAWL,IAAOqF,KAAhD,UACE,sBAAKhF,UAAWL,IAAOsF,OAAvB,UACE,qBAAKjF,UAAWL,IAAOuF,MAAvB,SACE,cAACC,EAAA,EAAD,CACEnD,UAAU,EACVD,MAAM,GACN9C,KAAK,SACLC,MAAOL,EAAI,OACXiD,SAAU6B,EACVyB,YAAY,+BAGhB,qBAAKpF,UAAWL,IAAOuF,MAAvB,SACE,cAACC,EAAA,EAAD,CACEnD,UAAU,EACVD,MAAM,GACN7C,MAAOL,EAAI,IACXI,KAAK,MACL6C,SAAU6B,EACVyB,YAAY,iDAGhB,qBAAKpF,UAAWL,IAAOuF,MAAvB,SACE,cAACC,EAAA,EAAD,CACEnD,UAAU,EACVD,MAAM,GACN7C,MAAOL,EAAI,OACXI,KAAK,SACL6C,SAAU6B,EACVyB,YAAY,oEAGhB,qBAAKpF,UAAWL,IAAOuF,MAAvB,SACE,cAACC,EAAA,EAAD,CACEnD,UAAU,EACVD,MAAM,GACN7C,MAAOL,EAAI,cACXI,KAAK,gBACL6C,SAAU6B,EACVyB,YAAY,0EAGhB,cAAC3C,EAAA,EAAD,CAAYV,MAAM,wEAAiBY,MAAOsB,OAE5C,cAAClE,EAAA,EAAD,CAAQE,KAAK,mDAAWD,UAAWL,IAAOU,OAAQrB,KAAK,qB,kEC7EjE,IA2CI2C,EAAS,WAKX,IAL0B,IAAd0D,EAAc,uDAAP,GACf3E,EAAK,GACL4E,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWJ,IAG3CA,KAAQ,CAMb,IAAIK,EAAqB,GAAdJ,EAAMD,GAGf3E,GAFEgF,EAAO,GAEHA,EAAKC,SAAS,IACXD,EAAO,IAETA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGV,OAAOhF,I,mBCpGTa,EAAOC,QAAU,CAAC,UAAY,6BAA6B,eAAiB,kCAAkC,UAAY,+B,sHCGpH2D,EAAY,SAAC,GAAyB,IAAvBpD,EAAsB,EAAtBA,MAAUmD,EAAY,yBACnCxE,EAAKiB,cAKX,OAJIuD,EAAMlD,WACRkD,EAAME,aAAe,MAIrB,sBAAKpF,UAAWL,IAAOkG,UAAvB,UACG9D,GAAS,uBAAOO,QAAS5B,EAAhB,SAAqBqB,IAC/B,+CAAO/B,UAAWL,IAAOmG,WAAeZ,GAAxC,IAA+CxE,GAAIA,SAKzDyE,EAAU7E,aAAe,CACvB0B,UAAU,EACVhD,KAAM,QAaOmG,S,mBChCf5D,EAAOC,QAAU,CAAC,UAAY,0BAA0B,eAAiB,+BAA+B,OAAS,uBAAuB,cAAgB,8BAA8B,gBAAkB","file":"static/js/4.57edd938.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useForm = (initialState, onSubmit) => {\r\n  const [data, setData] = useState(initialState);\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { type, name, value } = target;\r\n    const newValue = type === \"radio\" ? target.dataset.radio : value;\r\n    setData((prevState) => ({ ...prevState, [name]: newValue }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(data);\r\n    setData({ ...initialState });\r\n  };\r\n\r\n  return [data, handleChange, handleSubmit];\r\n};\r\n\r\nexport default useForm;\r\n","import styles from \"./Button.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nconst types = {\r\n  primary: styles.buttonPrimary,\r\n  secondary: styles.buttonSecondary,\r\n};\r\nconst Button = ({ className, text, onClick, variant, type }) => {\r\n  const selectedClassName = types[variant];\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={`${styles.button} ${selectedClassName} ${className}`}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\nButton.defaultProps = {\r\n  variant: \"primary\",\r\n  className: \"\",\r\n  type: \"button\",\r\n  onClick: () => {},\r\n};\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"]),\r\n  variant: PropTypes.oneOf([\"primary\", \"secondary\"]),\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","export const getSummariesInfo = (state) =>\r\n  state.calendar.summaries.todaySummary;\r\n// export const getnotAllowedProducts = (state) =>\r\n//   state.calendar?.summaries?.user?.userData?.notAllowedProducts;\r\n\r\n\r\n// export const getUserId = (state) => state.calendar.id;\r\nexport const getUserId = (state) =>state.calendar.id;\r\n\r\n// export const getUserId = (state) => state.calendar.summaries.user.id;\r\n\r\nexport const getCurrentUserInfootAllowedProducts = (state) =>\r\n  state.calendar?.summaries?.userData?.notAllowedProducts;\r\n\r\n","import { useSelector } from \"react-redux\";\r\nimport { getCurrentUserInfootAllowedProducts } from \"../../../redux/calendar/summaries/summaries-selectors\";\r\nimport styles from \"./SideBarRation.module.scss\";\r\n\r\n// const user = {\r\n//   email: \"user@example.com\",\r\n//   username: \"Emma\",\r\n//   userData: {\r\n//     weight: 100,\r\n//     height: 170,\r\n//     age: 30,\r\n//     bloodType: 1,\r\n//     desiredWeight: 60,\r\n//     dailyRate: 2000,\r\n//     notAllowedProducts: [\"Омлет\"],\r\n//   },\r\n// };\r\n\r\nconst SideBarRation = () => {\r\n  const summary = \"Wellkom to hell\"\r\n  // const summary = useSelector(getCurrentUserInfootAllowedProducts).slice(0, 8).join(\",\");\r\n  // console.log(summary);\r\n\r\n  return (\r\n    <div className={styles.rationWrapper}>\r\n      <h2 className={styles.rationTitle}>Нерекомендуемые продукты</h2>\r\n      <p className={styles.ration}>{\r\n       summary\r\n      }</p>\r\n    </div>\r\n  );\r\n};\r\nexport default SideBarRation;\r\n","import { useSelector } from \"react-redux\";\r\nimport {  getnotAllowedProducts } from \"../../../redux/calendar/summaries/summaries-selectors\";\r\nimport styles from \"./SideBarSummary.module.scss\";\r\n\r\nconst summary = {\r\n  date: \"02.06.2021\",\r\n  kcalLeft: 0,\r\n  kcalConsumed: 0,\r\n  dailyRate: 0,\r\n  percentsOfDailyRate: 0,\r\n  // userId: \"507f1f77bcf86cd799439011\",\r\n  // id: \"507f1f77bcf86cd799439012\",\r\n};\r\n\r\nconst SideBarSummary = () => {\r\n  // const summary = useSelector(getnotAllowedProducts);\r\n\r\n  return (\r\n    <>\r\n        <div className={styles.summaryDiv}>\r\n          <h2 className={styles.summaryTitle}>Сводка за {summary.date}</h2>\r\n          <ul className={styles.summaryList}>\r\n            <li className={styles.summaryItem}>\r\n              Осталось{\" \"}\r\n              <span className={styles.summary_kcal}>\r\n                {summary.kcalLeft} ккал\r\n              </span>\r\n            </li>\r\n            <li className={styles.summaryItem}>\r\n              Употреблено{\" \"}\r\n              <span className={styles.summary_kcal}>\r\n                {summary.kcalConsumed} ккал\r\n              </span>\r\n            </li>\r\n            <li className={styles.summaryItem}>\r\n              Дневная норма{\" \"}\r\n              <span className={styles.summary_kcal}>\r\n                {summary.dailyRate} ккал\r\n              </span>\r\n            </li>\r\n            <li className={styles.summaryItem}>\r\n              n% от нормы{\" \"}\r\n              <span className={styles.summary_kcal}>\r\n                {summary.percentsOfDailyRate} ккал\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      \r\n    </>\r\n  );\r\n};\r\nexport default SideBarSummary;\r\n","import SideBarRation from \"./SideBarRation/SideBarRation\";\r\nimport SideBarSummary from \"./sideBarSummary/SideBarSummary\";\r\n\r\nimport styles from \"./SideBar.module.scss\";\r\n\r\nfunction SideBar() {\r\n  return (\r\n    <div className={styles.SideBar}>\r\n      <SideBarSummary />\r\n      <SideBarRation />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RadioField_container__1hTKn\",\"visuallyHidden\":\"RadioField_visuallyHidden__K6ANJ\",\"radioBox\":\"RadioField_radioBox__MubjG\",\"radioLabel\":\"RadioField_radioLabel__1wJ0F\",\"radioButton\":\"RadioField_radioButton__22-lM\",\"customRadio\":\"RadioField_customRadio__2mxSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RadioGroup_container__2PlHb\",\"visuallyHidden\":\"RadioGroup_visuallyHidden__sQLyu\",\"radioGroup\":\"RadioGroup_radioGroup__QEPX2\",\"radioButtons\":\"RadioGroup_radioButtons__1EheF\",\"label\":\"RadioGroup_label__bz-H4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rationWrapper\":\"SideBarRation_rationWrapper__3XcWy\",\"rationTitle\":\"SideBarRation_rationTitle__1Ib6G\",\"ration\":\"SideBarRation_ration__npRl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summaryDiv\":\"SideBarSummary_summaryDiv__13xKS\",\"summaryTitle\":\"SideBarSummary_summaryTitle__kWjx7\",\"summaryList\":\"SideBarSummary_summaryList__1ZpBA\",\"summaryItem\":\"SideBarSummary_summaryItem__2IAYs\",\"summary_kcal\":\"SideBarSummary_summary_kcal__2VEpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__3j_U4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthorizedPage_container__1X3t9\",\"visuallyHidden\":\"AuthorizedPage_visuallyHidden__KgyrK\",\"main\":\"AuthorizedPage_main__rzDXP\",\"mainDiv\":\"AuthorizedPage_mainDiv__1g7g3\",\"sideBarDiv\":\"AuthorizedPage_sideBarDiv__2Tye5\"};","import { nanoid } from \"nanoid\";\r\nimport { useRef } from \"react\";\r\n\r\nconst useUniqueString = () => {\r\n  const uniqueRef = useRef(nanoid());\r\n  return uniqueRef.current;\r\n};\r\n\r\nexport default useUniqueString;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport useUniqueString from \"../../hooks/useUniqueString\";\r\nimport styles from \"./RadioField.module.scss\";\r\n\r\nconst RadioField = ({ onChange, label, name, required, dataRadio }) => {\r\n  const id = useUniqueString();\r\n  return (\r\n    <div className={styles.radioBox}>\r\n      <input\r\n        name={name}\r\n        id={id}\r\n        type=\"radio\"\r\n        data-radio={dataRadio}\r\n        onChange={onChange}\r\n        required={required && required}\r\n        className={`${styles.radioButton} ${styles.visuallyHidden}`}\r\n      />\r\n      <label htmlFor={id} className={styles.radioLabel}>\r\n        <span className={styles.customRadio}></span>\r\n        {label && label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nRadioField.defaultProps = {\r\n  onChange: () => {},\r\n  required: false,\r\n};\r\nRadioField.propTypes = {\r\n  required: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  label: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n};\r\nexport default RadioField;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport RadioField from \"../RadioField\";\r\nimport styles from \"./RadioGroup.module.scss\";\r\n\r\nconst RadioGroup = ({ label, items }) => {\r\n  const elements = items.map((item) => (\r\n    <RadioField key={item.label} {...item} />\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.radioGroup}>\r\n      {label && <label className={styles.label}>{label}</label>}\r\n      <div className={styles.radioButtons}>{elements}</div>\r\n    </div>\r\n  );\r\n};\r\nRadioGroup.defaultProps = {\r\n  items: [],\r\n};\r\nRadioGroup.propTypes = {\r\n  label: PropTypes.string,\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default RadioGroup;\r\n","import Sidebar from \"../../../client/SideBar\";\r\nimport styles from \"./AuthorizedPage.module.scss\";\r\n\r\nconst AuthorizedPageContainer = ({ children }) => {\r\n  return (\r\n    <main className={`${styles.main} container`}>\r\n      <div className={styles.mainDiv}>{children}</div>\r\n      <div className={styles.sideBarDiv}>\r\n        <Sidebar />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport default AuthorizedPageContainer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CalculatorPage_container__1v6fm\",\"visuallyHidden\":\"CalculatorPage_visuallyHidden__1zKfn\",\"title\":\"CalculatorPage_title__2RttT\",\"main\":\"CalculatorPage_main__tRl-h\",\"form\":\"CalculatorPage_form__SLcv2\",\"fields\":\"CalculatorPage_fields__3a7ge\",\"field\":\"CalculatorPage_field__2Ta-x\",\"button\":\"CalculatorPage_button__3xH0s\"};","export const initialState = {\r\n  weight: \"\",\r\n  height: \"\",\r\n  age: \"\",\r\n  desiredWeight: \"\",\r\n  bloodType: null,\r\n};\r\n","import styles from \"./CalculatorPage.module.scss\";\r\nimport Button from \"../../shared/components/Button\";\r\nimport TextField from \"../../shared/components/TextField\";\r\nimport RadioGroup from \"../../shared/components/RadioGroup\";\r\nimport useForm from \"../../shared/hooks/useForm\";\r\nimport { initialState } from \"./initialState\";\r\nimport AuthorizedPageContainer from \"../../shared/containerPage/AuthorizedPage/AuthorizedPage\";\r\nimport { getUserId } from \"../../redux/calendar/summaries/summaries-selectors\";\r\nimport { useSelector ,useDispatch} from \"react-redux\";\r\nimport { postDailyRate } from \"../../redux/calendar/summaries/summaries-operations\";\r\n\r\nconst CalculatorPage = () => {\r\n  const [data, handleChange, handleSubmit] = useForm(initialState, () => {\r\n    return;\r\n  });\r\n  const dispatch = useDispatch()\r\n  const idUser = useSelector(getUserId)\r\n \r\n  \r\n\r\n  const name = \"bloodType\";\r\n  const itemsOptions = [\r\n    {\r\n      onChange: handleChange,\r\n      name,\r\n      label: \"1\",\r\n      dataRadio: 1,\r\n      required: true,\r\n    },\r\n    {\r\n      onChange: handleChange,\r\n      name,\r\n      dataRadio: 2,\r\n      label: \"2\",\r\n    },\r\n    {\r\n      onChange: handleChange,\r\n      name,\r\n      dataRadio: 3,\r\n      label: \"3\",\r\n    },\r\n    {\r\n      onChange: handleChange,\r\n      name,\r\n      dataRadio: 4,\r\n      label: \"4\",\r\n    },\r\n  ];\r\n\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const aaa = Object.entries(data);\r\n    const bbb = aaa.map(([key, value]) => [key, Number(value)]);\r\n    const ccc = await Object.fromEntries(bbb);\r\n\r\n    dispatch(postDailyRate({ccc,idUser}))\r\n    e.target.reset();\r\n    handleSubmit(e);\r\n  };\r\n\r\n  return (\r\n      <AuthorizedPageContainer>\r\n      <div className=\"container\">\r\n        <h1 className={styles.title}>\r\n          Просчитай свою суточную норму калорий прямо сейчас\r\n        </h1>\r\n        <form onSubmit={onFormSubmit} className={styles.form}>\r\n          <div className={styles.fields}>\r\n            <div className={styles.field}>\r\n              <TextField\r\n                required={true}\r\n                label=\"\"\r\n                name=\"height\"\r\n                value={data[\"height\"]}\r\n                onChange={handleChange}\r\n                placeholder=\"Рост\"\r\n              />\r\n            </div>\r\n            <div className={styles.field}>\r\n              <TextField\r\n                required={true}\r\n                label=\"\"\r\n                value={data[\"age\"]}\r\n                name=\"age\"\r\n                onChange={handleChange}\r\n                placeholder=\"Возраст\"\r\n              />\r\n            </div>\r\n            <div className={styles.field}>\r\n              <TextField\r\n                required={true}\r\n                label=\"\"\r\n                value={data[\"weight\"]}\r\n                name=\"weight\"\r\n                onChange={handleChange}\r\n                placeholder=\"Текущий вес\"\r\n              />\r\n            </div>\r\n            <div className={styles.field}>\r\n              <TextField\r\n                required={true}\r\n                label=\"\"\r\n                value={data[\"desiredWeight\"]}\r\n                name=\"desiredWeight\"\r\n                onChange={handleChange}\r\n                placeholder=\"Желаемый вес\"\r\n              />\r\n            </div>\r\n            <RadioGroup label=\"Группа крови *\" items={itemsOptions} />\r\n          </div>\r\n          <Button text=\"Похудеть\" className={styles.button} type=\"submit\" />\r\n        </form>\r\n    </div>\r\n</AuthorizedPageContainer>\r\n \r\n  );\r\n};\r\n\r\nexport default CalculatorPage;\r\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TextField_container__3jTzc\",\"visuallyHidden\":\"TextField_visuallyHidden__2HKVH\",\"formInput\":\"TextField_formInput__1n7-G\"};","import { nanoid } from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TextField.module.scss\";\r\n\r\nconst TextField = ({ label, ...field }) => {\r\n  const id = nanoid();\r\n  if (field.required) {\r\n    field.placeholder += \" *\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.formGroup}>\r\n      {label && <label htmlFor={id}>{label}</label>}\r\n      <input className={styles.formInput} {...field} id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  required: false,\r\n  type: \"text\",\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__1xKJd\",\"visuallyHidden\":\"Button_visuallyHidden__2neLE\",\"button\":\"Button_button__3NJm6\",\"buttonPrimary\":\"Button_buttonPrimary__1oM8A\",\"buttonSecondary\":\"Button_buttonSecondary__3_xVy\"};"],"sourceRoot":""}