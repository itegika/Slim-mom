{"version":3,"sources":["shared/components/Button/Button.module.scss","shared/components/TextField/TextField.jsx","shared/components/Button/Button.js","shared/containerPage/AuthorizedPage/AuthorizedPage.jsx","client/SideBar/SideBarRation/SideBarRation.module.scss","client/SideBar/sideBarSummary/SideBarSummary.module.scss","client/SideBar/SideBar.module.scss","shared/containerPage/AuthorizedPage/AuthorizedPage.module.scss","shared/hooks/useForm.js","shared/components/TextField/InputAttr.jsx","shared/containerPage/AuthorizedPage/index.js","client/LoginForm/LoginForm.module.scss","client/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","client/SideBar/SideBarRation/SideBarRation.jsx","client/SideBar/sideBarSummary/SideBarSummary.jsx","client/SideBar/SideBar.jsx","../node_modules/nanoid/index.browser.js","shared/components/TextField/TextField.module.scss"],"names":["module","exports","TextField","label","field","id","nanoid","required","placeholder","className","styles","formGroup","htmlFor","formInput","defaultProps","type","types","primary","buttonPrimary","secondary","buttonSecondary","Button","text","onClick","variant","selectedClassName","button","AuthorizedPageContainer","children","main","mainDiv","sideBarDiv","useForm","initialState","onSubmit","useState","data","setData","target","name","value","newValue","dataset","radio","prevState","e","preventDefault","inputAttr","title","email","password","LoginForm","dispatch","useDispatch","values","authOperations","logIn","handleChange","handleSubmit","container","autoComplete","onChange","btnBox","regBtn","to","LoginPage","AuthorizedPage","user","username","userData","weight","height","age","bloodType","desiredWeight","dailyRate","notAllowedProducts","SideBarRation","rationWrapper","rationTitle","ration","SideBarSummary","summary","useSelector","getCurrentUserInfootAllowedProducts","summaryDiv","summaryTitle","date","summaryList","summaryItem","summary_kcal","kcalLeft","kcalConsumed","percentsOfDailyRate","SideBar","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"mappings":"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","file":"static/js/5.c3fd48e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__1xKJd\",\"visuallyHidden\":\"Button_visuallyHidden__2neLE\",\"button\":\"Button_button__3NJm6\",\"buttonPrimary\":\"Button_buttonPrimary__1oM8A\",\"buttonSecondary\":\"Button_buttonSecondary__3_xVy\"};","import { nanoid } from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TextField.module.scss\";\r\n\r\nconst TextField = ({ label, ...field }) => {\r\n  const id = nanoid();\r\n  if (field.required) {\r\n    field.placeholder += \" *\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.formGroup}>\r\n      {label && <label htmlFor={id}>{label}</label>}\r\n      <input className={styles.formInput} {...field} id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  required: false,\r\n  type: \"text\",\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import styles from \"./Button.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nconst types = {\r\n  primary: styles.buttonPrimary,\r\n  secondary: styles.buttonSecondary,\r\n};\r\nconst Button = ({ className, text, onClick, variant, type }) => {\r\n  const selectedClassName = types[variant];\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={`${styles.button} ${selectedClassName} ${className}`}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\nButton.defaultProps = {\r\n  variant: \"primary\",\r\n  className: \"\",\r\n  type: \"button\",\r\n  onClick: () => {},\r\n};\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"]),\r\n  variant: PropTypes.oneOf([\"primary\", \"secondary\"]),\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","import Sidebar from \"../../../client/SideBar\";\r\n\r\nimport styles from \"./AuthorizedPage.module.scss\";\r\n\r\nconst AuthorizedPageContainer = ({ children }) => {\r\n  return (\r\n    <main className={`${styles.main} container`}>\r\n      <div className={styles.mainDiv}>{children}</div>\r\n      <div className={styles.sideBarDiv}>\r\n        <Sidebar />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport default AuthorizedPageContainer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rationWrapper\":\"SideBarRation_rationWrapper__3XcWy\",\"rationTitle\":\"SideBarRation_rationTitle__1Ib6G\",\"ration\":\"SideBarRation_ration__npRl1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summaryDiv\":\"SideBarSummary_summaryDiv__13xKS\",\"summaryTitle\":\"SideBarSummary_summaryTitle__kWjx7\",\"summaryList\":\"SideBarSummary_summaryList__1ZpBA\",\"summaryItem\":\"SideBarSummary_summaryItem__2IAYs\",\"summary_kcal\":\"SideBarSummary_summary_kcal__2VEpm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__3j_U4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthorizedPage_container__1X3t9\",\"visuallyHidden\":\"AuthorizedPage_visuallyHidden__KgyrK\",\"main\":\"AuthorizedPage_main__rzDXP\",\"mainDiv\":\"AuthorizedPage_mainDiv__1g7g3\",\"sideBarDiv\":\"AuthorizedPage_sideBarDiv__2Tye5\"};","import { useState } from \"react\";\r\n\r\nconst useForm = (initialState, onSubmit) => {\r\n  const [data, setData] = useState(initialState);\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { type, name, value } = target;\r\n    const newValue = type === \"radio\" ? target.dataset.radio : value;\r\n    setData((prevState) => ({ ...prevState, [name]: newValue }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(data);\r\n    setData({ ...initialState });\r\n  };\r\n\r\n  return [data, handleChange, handleSubmit];\r\n};\r\n\r\nexport default useForm;\r\n","const inputAttr = {\r\n  name: {\r\n    name: \"username\",\r\n    placeholder: \"Имя\",\r\n    // pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title:\r\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n    required: true,\r\n  },\r\n  email: {\r\n    name: \"email\",\r\n    placeholder: \"Логин\",\r\n    // pattern: \"[a-zA-Z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-zA-Z0-9-]+(.[a-zA-Z0-9-]+)*\",\r\n    title: \"Введите email в формате user@example.com, в качестве логина\",\r\n    required: true,\r\n  },\r\n  password: {\r\n    name: \"password\",\r\n    placeholder: \"Пароль\",\r\n    type: \"password\",\r\n    // pattern:\r\n    // \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).+\",\r\n    //   title:\r\n    // \"Введите минимум 8 символов, обязательно должны присутствовать цифры и буквы разного регистра\",\r\n    required: true,\r\n  },\r\n};\r\n\r\nexport default inputAttr;\r\n","export { default } from \"./AuthorizedPage\";\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginForm_container__3CdV_\",\"title\":\"LoginForm_title__qcTzm\",\"btnBox\":\"LoginForm_btnBox__TQdiA\",\"regBtn\":\"LoginForm_regBtn__1USNt\"};","import { useDispatch } from \"react-redux\";\r\nimport authOperations from \"../../redux/auth/auth-operations\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextField from \"../../shared/components/TextField\";\r\nimport useForm from \"../../shared/hooks/useForm\";\r\nimport Button from \"../../shared/components/Button\";\r\nimport inputAttr from \"../../shared/components/TextField/InputAttr\";\r\nimport styles from \"./LoginForm.module.scss\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (values) => {\r\n    dispatch(authOperations.logIn(values));\r\n  };\r\n  const [data, handleChange, handleSubmit] = useForm(initialState, onSubmit);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>ВХОД</h1>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        //   className={styles.form}\r\n        autoComplete=\"off\"\r\n      >\r\n        <TextField\r\n          //   className={styles.input}\r\n          {...inputAttr.email}\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          required\r\n          placeholder=\"Логин\"\r\n          value={data.email}\r\n        />\r\n        <TextField\r\n          //   className={styles.input}\r\n          {...inputAttr.password}\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          required\r\n          placeholder=\"Пароль\"\r\n          value={data.password}\r\n        />\r\n        <div className={styles.btnBox}>\r\n          {/* импортировать и заменить кнопки когда сделают компонент */}\r\n          <Button\r\n            className={`${styles.button} ${styles.buttonPrimary} ${styles.regBtn}`}\r\n            text=\"Вход\"\r\n            type=\"submit\"\r\n            variant=\"primary\"\r\n          />\r\n          <Link\r\n            to=\"/registration\"\r\n            //  поменять путь когда создадим объект paths\r\n          >\r\n            <Button\r\n              className={`${styles.button} ${styles.buttonSecondary} ${styles.regBtn}`}\r\n              text=\"Регистрация\"\r\n              type=\"submit\"\r\n              variant=\"secondary\"\r\n            />\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from \"../../client/LoginForm\";\r\nimport AuthorizedPageContainer from \"../../shared/containerPage/AuthorizedPage\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <AuthorizedPageContainer>\r\n      <LoginForm />\r\n    </AuthorizedPageContainer>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import styles from \"./SideBarRation.module.scss\";\r\n\r\nconst user = {\r\n  email: \"user@example.com\",\r\n  username: \"Emma\",\r\n  userData: {\r\n    weight: 100,\r\n    height: 170,\r\n    age: 30,\r\n    bloodType: 1,\r\n    desiredWeight: 60,\r\n    dailyRate: 2000,\r\n    notAllowedProducts: [\"Омлет\"],\r\n  },\r\n};\r\n\r\nconst SideBarRation = () => {\r\n  return (\r\n    <div className={styles.rationWrapper}>\r\n      <h2 className={styles.rationTitle}>Нерекомендуемые продукты</h2>\r\n      <p className={styles.ration}>{[user.userData.notAllowedProducts]}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default SideBarRation;\r\n","import { useSelector } from \"react-redux\";\r\nimport { getCurrentUserInfootAllowedProducts } from \"../../../redux/calendar/summaries/summaries-selectors\";\r\nimport styles from \"./SideBarSummary.module.scss\";\r\n\r\nconst summary = {\r\n  date: \"02.06.2021\",\r\n  kcalLeft: 1000,\r\n  kcalConsumed: 1000,\r\n  dailyRate: 2000,\r\n  percentsOfDailyRate: 50,\r\n  userId: \"507f1f77bcf86cd799439011\",\r\n  id: \"507f1f77bcf86cd799439012\",\r\n};\r\n\r\nconst SideBarSummary = () => {\r\n  const summary = useSelector(getCurrentUserInfootAllowedProducts);\r\n\r\n  return (\r\n    <>\r\n      {summary && (\r\n        <div className={styles.summaryDiv}>\r\n          <h2 className={styles.summaryTitle}>Сводка за {summary.date}</h2>\r\n          <ul className={styles.summaryList}>\r\n            <li className={styles.summaryItem}>\r\n              Осталось{\" \"}\r\n              <span className={styles.summary_kcal}>\r\n                {summary.kcalLeft} ккал\r\n              </span>\r\n            </li>\r\n            <li className={styles.summaryItem}>\r\n              Употреблено{\" \"}\r\n              <span className={styles.summary_kcal}>\r\n                {summary.kcalConsumed} ккал\r\n              </span>\r\n            </li>\r\n            <li className={styles.summaryItem}>\r\n              Дневная норма{\" \"}\r\n              <span className={styles.summary_kcal}>\r\n                {summary.dailyRate} ккал\r\n              </span>\r\n            </li>\r\n            <li className={styles.summaryItem}>\r\n              n% от нормы{\" \"}\r\n              <span className={styles.summary_kcal}>\r\n                {summary.percentsOfDailyRate} ккал\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default SideBarSummary;\r\n","import SideBarRation from \"./SideBarRation/SideBarRation\";\r\nimport SideBarSummary from \"./sideBarSummary/SideBarSummary\";\r\n\r\nimport styles from \"./SideBar.module.scss\";\r\n\r\nfunction SideBar() {\r\n  return (\r\n    <div className={styles.SideBar}>\r\n      <SideBarSummary />\r\n      <SideBarRation />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TextField_container__3jTzc\",\"visuallyHidden\":\"TextField_visuallyHidden__2HKVH\",\"formInput\":\"TextField_formInput__1n7-G\"};"],"sourceRoot":""}