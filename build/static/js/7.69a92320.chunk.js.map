{"version":3,"sources":["shared/components/Button/Button.module.scss","shared/components/TextField/TextField.jsx","shared/components/Button/Button.js","shared/hooks/useForm.js","pages/MainPage/MainPage.module.scss","shared/components/RadioField/RadioField.module.scss","shared/components/RadioGroup/RadioGroup.module.scss","client/Modal/Modal.module.scss","shared/hooks/useUniqueString.js","shared/components/RadioField/RadioField.jsx","shared/components/RadioGroup/RadioGroup.jsx","client/Modal/Modal.jsx","shared/components/ModalInfo/ModalInfo.jsx","pages/MainPage/initialState.js","pages/MainPage/MainPage.jsx","../node_modules/nanoid/index.browser.js","shared/components/TextField/TextField.module.scss"],"names":["module","exports","TextField","label","field","id","nanoid","required","placeholder","className","styles","formGroup","htmlFor","formInput","defaultProps","type","types","primary","buttonPrimary","secondary","buttonSecondary","Button","text","onClick","variant","selectedClassName","button","useForm","initialState","onSubmit","useState","data","setData","target","name","value","newValue","dataset","radio","prevState","e","preventDefault","useUniqueString","useRef","current","RadioField","onChange","dataRadio","radioBox","data-radio","radioButton","visuallyHidden","radioLabel","customRadio","RadioGroup","elements","items","map","item","radioGroup","radioButtons","Modal","document","querySelector","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","modalMainContainerOverlay","currentTarget","modalMainContainer","closeModalBtn","mobileBackground","closeModalBtnMobile","tagName","container","getElementById","ModalInfo","products","calories","product","weight","height","age","desiredWeight","bloodType","MainPage","handleChange","handleSubmit","modalIsOpen","setModalIsOpen","setProducts","setCalories","toggleModal","itemsOptions","onFormSubmit","a","aaa","Object","entries","bbb","key","Number","fromEntries","ccc","getDailyRate","dailyRate","notAllowedProducts","slice","console","log","reset","main","title","form","fields","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase"],"mappings":"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","file":"static/js/7.69a92320.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__1xKJd\",\"visuallyHidden\":\"Button_visuallyHidden__2neLE\",\"button\":\"Button_button__3NJm6\",\"buttonPrimary\":\"Button_buttonPrimary__1oM8A\",\"buttonSecondary\":\"Button_buttonSecondary__3_xVy\"};","import { nanoid } from \"nanoid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TextField.module.scss\";\r\n\r\nconst TextField = ({ label, ...field }) => {\r\n  const id = nanoid();\r\n  if (field.required) {\r\n    field.placeholder += \" *\";\r\n  }\r\n\r\n  return (\r\n    <div className={styles.formGroup}>\r\n      {label && <label htmlFor={id}>{label}</label>}\r\n      <input className={styles.formInput} {...field} id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nTextField.defaultProps = {\r\n  required: false,\r\n  type: \"text\",\r\n};\r\n\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import styles from \"./Button.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\nconst types = {\r\n  primary: styles.buttonPrimary,\r\n  secondary: styles.buttonSecondary,\r\n};\r\nconst Button = ({ className, text, onClick, variant, type }) => {\r\n  const selectedClassName = types[variant];\r\n  return (\r\n    <button\r\n      type={type}\r\n      onClick={onClick}\r\n      className={`${styles.button} ${selectedClassName} ${className}`}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\nButton.defaultProps = {\r\n  variant: \"primary\",\r\n  className: \"\",\r\n  type: \"button\",\r\n  onClick: () => {},\r\n};\r\nButton.propTypes = {\r\n  type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"]),\r\n  variant: PropTypes.oneOf([\"primary\", \"secondary\"]),\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","import { useState } from \"react\";\r\n\r\nconst useForm = (initialState, onSubmit) => {\r\n  const [data, setData] = useState(initialState);\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { type, name, value } = target;\r\n    const newValue = type === \"radio\" ? target.dataset.radio : value;\r\n    setData((prevState) => ({ ...prevState, [name]: newValue }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(data);\r\n    setData({ ...initialState });\r\n  };\r\n\r\n  return [data, handleChange, handleSubmit];\r\n};\r\n\r\nexport default useForm;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainPage_container__10BtP\",\"visuallyHidden\":\"MainPage_visuallyHidden__2gImd\",\"title\":\"MainPage_title__2-Ikf\",\"main\":\"MainPage_main__3pAPV\",\"form\":\"MainPage_form__2Mpkx\",\"fields\":\"MainPage_fields__1fboo\",\"field\":\"MainPage_field__3dtMg\",\"button\":\"MainPage_button__1fNBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RadioField_container__1hTKn\",\"visuallyHidden\":\"RadioField_visuallyHidden__K6ANJ\",\"radioBox\":\"RadioField_radioBox__MubjG\",\"radioLabel\":\"RadioField_radioLabel__1wJ0F\",\"radioButton\":\"RadioField_radioButton__22-lM\",\"customRadio\":\"RadioField_customRadio__2mxSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RadioGroup_container__2PlHb\",\"visuallyHidden\":\"RadioGroup_visuallyHidden__sQLyu\",\"radioGroup\":\"RadioGroup_radioGroup__QEPX2\",\"radioButtons\":\"RadioGroup_radioButtons__1EheF\",\"label\":\"RadioGroup_label__bz-H4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__1sC4E\",\"visuallyHidden\":\"Modal_visuallyHidden__U0jRH\",\"modalMainContainerOverlay\":\"Modal_modalMainContainerOverlay__ZgPgh\",\"modalMainContainer\":\"Modal_modalMainContainer__2fhY3\",\"mobileBackground\":\"Modal_mobileBackground__aX3tY\",\"closeModalBtnMobile\":\"Modal_closeModalBtnMobile__3X7Ur\",\"closeModalBtn\":\"Modal_closeModalBtn__1tbzQ\"};","import { nanoid } from \"nanoid\";\r\nimport { useRef } from \"react\";\r\n\r\nconst useUniqueString = () => {\r\n  const uniqueRef = useRef(nanoid());\r\n  return uniqueRef.current;\r\n};\r\n\r\nexport default useUniqueString;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport useUniqueString from \"../../hooks/useUniqueString\";\r\nimport styles from \"./RadioField.module.scss\";\r\n\r\nconst RadioField = ({ onChange, label, name, required, dataRadio }) => {\r\n  const id = useUniqueString();\r\n  return (\r\n    <div className={styles.radioBox}>\r\n      <input\r\n        name={name}\r\n        id={id}\r\n        type=\"radio\"\r\n        data-radio={dataRadio}\r\n        onChange={onChange}\r\n        required={required && required}\r\n        className={`${styles.radioButton} ${styles.visuallyHidden}`}\r\n      />\r\n      <label htmlFor={id} className={styles.radioLabel}>\r\n        <span className={styles.customRadio}></span>\r\n        {label && label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nRadioField.defaultProps = {\r\n  onChange: () => {},\r\n  required: false,\r\n};\r\nRadioField.propTypes = {\r\n  required: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n  label: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n};\r\nexport default RadioField;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport RadioField from \"../RadioField\";\r\nimport styles from \"./RadioGroup.module.scss\";\r\n\r\nconst RadioGroup = ({ label, items }) => {\r\n  const elements = items.map((item) => (\r\n    <RadioField key={item.label} {...item} />\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.radioGroup}>\r\n      {label && <label className={styles.label}>{label}</label>}\r\n      <div className={styles.radioButtons}>{elements}</div>\r\n    </div>\r\n  );\r\n};\r\nRadioGroup.defaultProps = {\r\n  items: [],\r\n};\r\nRadioGroup.propTypes = {\r\n  label: PropTypes.string,\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default RadioGroup;\r\n","import styles from \"./Modal.module.scss\";\r\nimport { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalWindow = document.querySelector(\"#modal\");\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, []);\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleCloseButtonClick = (e) => {\r\n    if (e.target.tagName === \"BUTTON\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div\r\n      className={styles.modalMainContainerOverlay}\r\n      onClick={handleBackdropClick}\r\n    >\r\n      <div className={styles.modalMainContainer}>\r\n        <button className={styles.closeModalBtn} onClick={onClose} />\r\n        <div className={styles.mobileBackground}>\r\n          <button\r\n            className={styles.closeModalBtnMobile}\r\n            onClick={handleCloseButtonClick}\r\n          />\r\n        </div>\r\n        <div className={styles.container}>{children}</div>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n};\r\nModal.defaultProps = {\r\n  onClose: () => {},\r\n};\r\nModal.propTypes = {\r\n  onCLose: PropTypes.func,\r\n};\r\n\r\nexport default Modal;\r\n","const ModalInfo = ({ products, calories }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2></h2>\r\n        <p> {calories}</p>\r\n      </div>\r\n      <div>\r\n        <h2></h2>\r\n        <ol>\r\n          {products.map((product) => {\r\n            return <li>{product}</li>;\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ModalInfo;\r\n","export const initialState = {\r\n  weight: \"\",\r\n  height: \"\",\r\n  age: \"\",\r\n  desiredWeight: \"\",\r\n  bloodType: null,\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport styles from \"./MainPage.module.scss\";\r\n\r\nimport Button from \"../../shared/components/Button\";\r\nimport TextField from \"../../shared/components/TextField\";\r\nimport RadioGroup from \"../../shared/components/RadioGroup\";\r\nimport Modal from \"../../client/Modal\";\r\nimport ModalInfo from \"../../shared/components/ModalInfo\";\r\nimport { getDailyRate } from \"../../shared/services/daily\";\r\nimport useForm from \"../../shared/hooks/useForm\";\r\nimport { initialState } from \"./initialState\";\r\n\r\nconst MainPage = () => {\r\n  const [data, handleChange, handleSubmit] = useForm(initialState, () => {\r\n    return;\r\n  });\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [calories, setCalories] = useState(null);\r\n\r\n  const toggleModal = () => {\r\n    setModalIsOpen(!modalIsOpen);\r\n  };\r\n\r\n  const name = \"bloodType\";\r\n  const itemsOptions = [\r\n    {\r\n      onChange: handleChange,\r\n      name,\r\n      label: \"1\",\r\n      dataRadio: 1,\r\n      required: true,\r\n    },\r\n    {\r\n      onChange: handleChange,\r\n      name,\r\n      dataRadio: 2,\r\n\r\n      label: \"2\",\r\n    },\r\n    {\r\n      onChange: handleChange,\r\n      name,\r\n      dataRadio: 3,\r\n\r\n      label: \"3\",\r\n    },\r\n    {\r\n      onChange: handleChange,\r\n      name,\r\n      dataRadio: 4,\r\n\r\n      label: \"4\",\r\n    },\r\n  ];\r\n\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const aaa = Object.entries(data);\r\n    const bbb = aaa.map(([key, value]) => [key, Number(value)]);\r\n    const ccc = await Object.fromEntries(bbb);\r\n\r\n    toggleModal();\r\n    try {\r\n      const { data } = await getDailyRate(ccc);\r\n      const { dailyRate, notAllowedProducts } = await data;\r\n      setCalories(dailyRate);\r\n      setProducts(notAllowedProducts.slice(0, 4));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    e.target.reset();\r\n    handleSubmit(e);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <div className=\"container\">\r\n        <h1 className={styles.title}>\r\n          Просчитай свою суточную норму калорий прямо сейчас\r\n        </h1>\r\n        {modalIsOpen && (\r\n          <Modal onClose={toggleModal}>\r\n            <ModalInfo products={products} calories={calories} />\r\n          </Modal>\r\n        )}\r\n        <form onSubmit={onFormSubmit} className={styles.form}>\r\n          <div className={styles.fields}>\r\n            <div className={styles.field}>\r\n              <TextField\r\n                required={true}\r\n                label=\"\"\r\n                name=\"height\"\r\n                value={data[\"height\"]}\r\n                onChange={handleChange}\r\n                placeholder=\"Рост\"\r\n              />\r\n            </div>\r\n            <div className={styles.field}>\r\n              <TextField\r\n                required={true}\r\n                label=\"\"\r\n                value={data[\"age\"]}\r\n                name=\"age\"\r\n                onChange={handleChange}\r\n                placeholder=\"Возраст\"\r\n              />\r\n            </div>\r\n            <div className={styles.field}>\r\n              <TextField\r\n                required={true}\r\n                label=\"\"\r\n                value={data[\"weight\"]}\r\n                name=\"weight\"\r\n                onChange={handleChange}\r\n                placeholder=\"Текущий вес\"\r\n              />\r\n            </div>\r\n            <div className={styles.field}>\r\n              <TextField\r\n                required={true}\r\n                label=\"\"\r\n                value={data[\"desiredWeight\"]}\r\n                name=\"desiredWeight\"\r\n                onChange={handleChange}\r\n                placeholder=\"Желаемый вес\"\r\n              />\r\n            </div>\r\n\r\n            <RadioGroup label=\"Группа крови *\" items={itemsOptions} />\r\n          </div>\r\n          <Button text=\"Похудеть\" className={styles.button} type=\"submit\" />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TextField_container__3jTzc\",\"visuallyHidden\":\"TextField_visuallyHidden__2HKVH\",\"formInput\":\"TextField_formInput__1n7-G\"};"],"sourceRoot":""}